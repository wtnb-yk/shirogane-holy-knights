services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:14
    container_name: shirogane-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shirogane
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - shirogane-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # バックエンドサービス (Lambda モード)
  backend:
    build:
      context: ./backend
    container_name: shirogane-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: shirogane
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      FRONTEND_URL: http://localhost:3001 # ブラウザからのアクセスURLに変更
      SPRING_PROFILES_ACTIVE: lambda-local
    ports:
      - "8080:8080" # ホスト側からアクセス可能に
    networks:
      - shirogane-network
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # フロントエンドサービス
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shirogane-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - shirogane-network
    healthcheck:
      test: curl -f http://localhost:3000 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

# ボリューム定義
volumes:
  postgres-data:
    driver: local

# ネットワーク定義
networks:
  shirogane-network:
    driver: bridge