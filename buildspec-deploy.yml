version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  build:
    commands:
      # JARファイルのビルド
      - echo "Building Lambda JAR file..."
      - cd backend
      - ./gradlew clean springCloudFunctionLambdaJar
      - cd ..
      - |
        # JARファイルの存在確認
        if [ ! -f "backend/build/libs/shirogane-holy-knights-0.1.0-aws-lambda.jar" ]; then
          echo "❌ JAR file not found: backend/build/libs/shirogane-holy-knights-0.1.0-aws-lambda.jar"
          echo "Build failed or JAR file name mismatch"
          exit 1
        fi
        echo "✅ JAR file found successfully"
      
      - echo Checking if Lambda function exists
      - |
        if aws lambda get-function --function-name "$LAMBDA_FUNCTION_NAME" >/dev/null 2>&1; then
          echo "Lambda function exists, updating code..."
          
          # 関数コードの更新
          aws lambda update-function-code \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --zip-file "fileb://backend/build/libs/shirogane-holy-knights-0.1.0-aws-lambda.jar" || {
              echo "❌ Failed to update Lambda function code"
              exit 1
            }
          
          # 更新完了まで待機
          aws lambda wait function-updated \
            --function-name "$LAMBDA_FUNCTION_NAME"
          
          echo "Lambda function updated successfully"
          
          # 新しいバージョンをPublish
          echo "Publishing new version..."
          NEW_VERSION=$(aws lambda publish-version \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --query 'Version' \
            --output text)
          
          echo "Published version: $NEW_VERSION"
          
          # Aliasを新しいバージョンに更新
          echo "Updating alias 'live' to version $NEW_VERSION..."
          aws lambda update-alias \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --name "live" \
            --function-version "$NEW_VERSION"
          
          echo "✅ Alias 'live' updated to version $NEW_VERSION (SnapStart enabled)"
          
          # API Gateway権限を再設定（関数更新後に必要）
          echo "Ensuring API Gateway permissions..."
          aws lambda remove-permission \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --statement-id "AllowExecutionFromAPIGateway" 2>/dev/null || echo "Permission not found, proceeding..."
          
          aws lambda add-permission \
            --function-name "$LAMBDA_FUNCTION_NAME" \
            --statement-id "AllowExecutionFromAPIGateway" \
            --action "lambda:InvokeFunction" \
            --principal "apigateway.amazonaws.com" \
            --source-arn "$API_GATEWAY_EXECUTION_ARN/*/*"
          
          echo "✅ API Gateway permissions restored"
        else
          echo "❌ Lambda function $LAMBDA_FUNCTION_NAME not found"
          echo "Please create the infrastructure using Terraform first"
          exit 1
        fi

  post_build:
    commands:
      - echo Lambda deployment completed on `date`
      - |
        # 関数情報の取得
        aws lambda get-function --function-name "$LAMBDA_FUNCTION_NAME" \
          --query 'Configuration.{FunctionName:FunctionName,Runtime:Runtime,LastModified:LastModified,CodeSize:CodeSize}' \
          --output table
