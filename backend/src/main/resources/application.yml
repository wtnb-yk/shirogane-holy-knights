server:
  port: 8080
  
spring:
  application:
    name: shirogane-holy-knights-api
  main:
    web-application-type: reactive
    lazy-initialization: true  # Lazy Initialization有効化
  autoconfigure:
    exclude: 
      - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
  jackson:
    serialization:
      indent-output: true
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  webflux:
    cors:
      allowed-origins: "http://localhost:*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# R2DBC Migration設定
r2dbc:
  migrate:
    enable: true
    resources-paths: 
      - classpath:db/migration/*.sql
    wait-for-database: true

# アクチュエーターの設定
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized
    
  
# ロギング設定
logging:
  level:
    root: INFO
    com.shirogane.holy.knights: INFO
    org.springframework.web: INFO
    name.nkonev.r2dbc.migrate: DEBUG
    
# Spring Cloud Function設定
spring.cloud.function:
  definition: "apiGatewayFunction"
  scan:
    packages: "com.shirogane.holy.knights"

# AWS Lambda関連設定
aws:
  lambda:
    function:
      handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker

---
# Lambda環境専用設定
spring:
  config:
    activate:
      on-profile: lambda
  main:
    web-application-type: reactive
    lazy-initialization: true  # Lambda環境でもLazy Initialization有効化

# Lambda専用のロギング設定
logging:
  level:
    root: INFO
    com.shirogane.holy.knights: DEBUG
    org.springframework.cloud.function: DEBUG
    org.springframework.r2dbc: DEBUG
    io.r2dbc.postgresql: DEBUG
    name.nkonev.r2dbc.migrate: DEBUG

# Lambda環境専用のCORS設定
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:*}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Content-Type,Authorization,Content-Length,X-Requested-With,Accept,*
