# セキュリティスキャンワークフロー
# 依存関係の脆弱性とコードの品質を継続的にチェック

name: Security Scan

on:
  # 毎週月曜日 9:00 JSTに自動実行
  schedule:
    - cron: '0 0 * * 1'  # UTC 0:00 月曜日 = JST 9:00 月曜日
  
  # Pull Request時にも実行
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/package.json'
      - 'frontend/pnpm-lock.yaml'
      - 'backend/build.gradle.kts'
      - '.github/workflows/security-scan.yml'

  # 手動実行も可能
  workflow_dispatch:

jobs:
  frontend-security:
    name: Frontend Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run vulnerability scan
        working-directory: ./frontend
        run: pnpm audit --audit-level moderate

      - name: Build check
        working-directory: ./frontend
        run: pnpm build

  backend-security:
    name: Backend Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run Gradle build
        working-directory: ./backend
        run: ./gradlew build

      - name: Run dependency check (if plugin is added)
        working-directory: ./backend
        run: ./gradlew dependencyCheckAnalyze || echo "Dependency check plugin not configured"
        continue-on-error: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          # 高・重要な脆弱性のみでPRをブロック
          fail-on-severity: high
          # ライセンスチェック
          allow-licenses: MIT, Apache-2.0, ISC, BSD-2-Clause, BSD-3-Clause, MPL-2.0, LGPL-2.1, GPL-2.0, GPL-3.0
          
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        language: [ 'typescript', 'kotlin' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [frontend-security, backend-security]
    if: always()

    steps:
      - name: Create security report
        run: |
          echo "## 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend Security: ${{ needs.frontend-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Security: ${{ needs.backend-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scanned at:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.frontend-security.result }}" == "success" && "${{ needs.backend-security.result }}" == "success" ]]; then
            echo "✅ **All security checks passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some security checks failed. Please review the logs.**" >> $GITHUB_STEP_SUMMARY
          fi