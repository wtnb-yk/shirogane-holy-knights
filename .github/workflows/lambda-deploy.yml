name: Lambda Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

concurrency:
  group: lambda-deploy-${{ github.event.inputs.environment || 'dev' }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
    
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Lambda JAR
      run: ./gradlew springCloudFunctionLambdaJar

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
        aws-region: ap-northeast-1

    - name: Get Lambda function name
      id: lambda-name
      run: |
        FUNCTION_NAME="shirogane-holy-knights-${{ env.ENVIRONMENT }}-api"
        echo "function-name=$FUNCTION_NAME" >> $GITHUB_OUTPUT

    - name: Deploy to Lambda
      run: |
        JAR_FILE=$(find build/libs -name "*-aws-lambda.jar" | head -1)
        aws lambda update-function-code \
          --function-name ${{ steps.lambda-name.outputs.function-name }} \
          --zip-file fileb://$JAR_FILE \
          --region ap-northeast-1

    - name: Wait for Lambda update
      run: |
        aws lambda wait function-updated \
          --function-name ${{ steps.lambda-name.outputs.function-name }} \
          --region ap-northeast-1

    - name: Update Lambda configuration
      run: |
        aws lambda update-function-configuration \
          --function-name ${{ steps.lambda-name.outputs.function-name }} \
          --environment Variables="{SPRING_PROFILES_ACTIVE=lambda}" \
          --region ap-northeast-1

    - name: Publish Lambda version
      id: publish-version
      run: |
        VERSION=$(aws lambda publish-version \
          --function-name ${{ steps.lambda-name.outputs.function-name }} \
          --description "Deployed from GitHub Actions - ${{ github.sha }}" \
          --region ap-northeast-1 \
          --query 'Version' \
          --output text)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create deployment summary
      run: |
        echo "# Lambda Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment:** ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Function:** ${{ steps.lambda-name.outputs.function-name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.publish-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY