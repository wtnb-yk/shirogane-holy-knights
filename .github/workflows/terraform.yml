name: Terraform Infrastructure
run-name: Terraform ${{ github.event.inputs.action }} - ${{ github.event.inputs.environment }} environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prd
      action:
        description: 'Terraform Action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: infrastructure/terraform/environments/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build Lambda JAR
        working-directory: ./
        run: |
          echo "Building Lambda JAR file..."
          cd backend
          ./gradlew springCloudFunctionLambdaJar
          ls -la build/libs/


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::975069893654:role/GitHubActionsDeployRole
          aws-region: ap-northeast-1

      - name: Verify Terraform Configuration
        run: |
          if [ ! -f "main.tf" ]; then
            echo "❌ Terraform configuration not found for ${{ github.event.inputs.environment }} environment"
            echo "Expected files in: infrastructure/terraform/environments/${{ github.event.inputs.environment }}/"
            echo "Please create the Terraform configuration first"
            exit 1
          fi
          
          echo "✅ Terraform configuration found"
          ls -la

      - name: Terraform Init
        run: |
          echo "Initializing Terraform for ${{ github.event.inputs.environment }} environment..."
          terraform init -upgrade

      - name: Terraform Validate
        run: |
          echo "Validating Terraform configuration..."
          terraform validate

      - name: Terraform Plan
        id: plan
        timeout-minutes: 15
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "Creating Terraform plan..."
          terraform plan -input=false -no-color -out=tfplan
          
          # Plan結果をファイルに保存（GitHub Actionsの制限対応）
          terraform show -no-color tfplan > plan_output.txt
          
          echo "plan_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Display Plan Results
        run: |
          echo "## Terraform Plan Results for ${{ github.event.inputs.environment }} Environment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Plan Output:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat plan_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        timeout-minutes: 30
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "⚠️  Applying Terraform changes to ${{ github.event.inputs.environment }} environment..."
          echo "This will make actual changes to AWS resources!"
          
          terraform apply -input=false -auto-approve tfplan
          
          echo "✅ Terraform apply completed successfully"

      - name: Terraform Output
        if: github.event.inputs.action == 'apply'
        run: |
          echo "## Terraform Outputs for ${{ github.event.inputs.environment }} Environment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Summary
        run: |
          echo "🎯 **Terraform ${{ github.event.inputs.action }}** completed for **${{ github.event.inputs.environment }}** environment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.action }}" = "plan" ]; then
            echo "💡 Review the plan above and run with 'apply' action to make changes" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Infrastructure changes have been applied successfully" >> $GITHUB_STEP_SUMMARY
          fi
